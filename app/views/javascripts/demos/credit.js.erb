var participants = ["Alice", "Bob", "Claire", "Daniel"];
var target = 100;
var sum = [0, 0, 0, 0];
var polling_attempts = -1;
var max_attempts = 15;
var id = -1;
var pwd = "";

$(document).ready(function() {
  $.ajaxSetup({
    headers: {
      'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
    }
  });
  createBiddingSections();
});

function validateUpdateForm() {
  var error;
  var new_participants = $('#participants').val().split(",");

  var n = new_participants.length;
  if (n < 4 || n > 10) {
    displayError("The demo only allows between 4 and 10 participants.", "basics-error");
    return false;
  }

  var i;
  for (i = 0; i < n; i++) {
    new_participants[i] = $.trim(new_participants[i]).substring(0, 20);
    if (new_participants[i].length == 0) {
      displayError("We were unable to parse the participants list. Please check the field for stray commas.", "basics-error");
      return false;
    }
  }
  
  if (containsDuplicates(new_participants)) {
    displayError("Please ensure all participant names are unique.", "basics-error");
    return false;
  }

  participants = new_participants;
  createBiddingSections();
  advanceAccordion($('#basics'));
  $("#basics-error").text("");
  return true;
}

function displayError(msg, id) {
  var element = $("#"+id);
  var in_focus = scrollToView(element);
  if (element.text() == "" || !in_focus) {
    element.text(msg).fadeIn();
  } else {
    element.fadeOut(400, function() {
      element.text(msg).fadeIn();
    });    
  }
}

function createBiddingSections() {
  var bidding_text = "use the sliders to indicate the relative contributions of each of your peers (credit is out of 100%). Your ratings should reflect the percentage of the total project that each individual is responsible for, <em>not taking your own contributions into account</em>. Your ratings must sum to 100%. You can use the <em>rescale</em> button to automatically adjust your ratings to add up to 100%."
  var participants_copy = participants;
  var bidding_sections = new Array();
  var html = "";
  var i;
  for (i=0; i < participants.length; i++) {
    html += "<div class = 'accordion accordion-bidding' id = 'bidding_" + i + "'>";
    html +=     participants[i] + "'s Evaluations <span class = 'symbol'></span>";
    html += "</div>";
    html += "<div class = 'accordion-container accordion-bidding'>";
    html += "  <div class = 'accordion-content'>";
    html += "    <p><strong>" + participants[i] + ", </strong>" + bidding_text + "</p>";
    html += "    <p id='bidding-error-" + i + "' class='error-msg error-text'></p>";
    html += "    <div class='range-calc'>";
    html += "      <div class='calculations'>";
    var j;
    for (j=0; j < participants.length; j++) {
      if (i==j) continue;
      html += "      <div class='calc-row'>";
      html += "        <div class='name'>";
      html += "          <p>" + participants[j] + "</p>";
      html += "        </div>";
      html += "        <div class='nstSlider range nstSlider" + i + "' data-range_min='1' data-range_max='" + target + "' data-cur_min='1' data-id='" + i + "'>";
      html += "          <div class='leftGrip'></div>";
      html += "        </div>";
      html += "        <span class='calc-value'>";
      html += "          <input type='text' data-id='" + i + "' id='values_" + i + "_" + j + "' name='values[" + i + "][" + j + "]' class='valuation_ipt leftLabel cost valuation_ipt"+i+"'>%"
      html += "        </span>";
      html += "      </div>";
    }
    html += "        <div class='calc-control'>";
    html += "          <div class='btns'>";
    html += "            <button type='button' class='btn reset' onclick='return resetSliders(" + i + ")'>Reset</button>";
    html += "            <button type='button' class='btn update' onclick='return updateSliders(" + i + ")'>Rescale</button>";
    html += "            <button type='button' class='btn update' onclick='return checkSliders(" + i + ")'>Continue</button>";
    html += "          </div>";
    html += "          <div class='totals'>";
    html += "            <p><strong>Current Total:</strong> <span id = 'sum-" + i + "'>" + (participants.length - 1) + "</span>%</p>";
    html += "            <p><strong>Target:</strong> " + target + "%</p>";
    html += "          </div>";
    html += "        </div>";
    html += "      </div>";
    html += "    </div>";
    html += "  </div>";
    html += "</div>";
  }
  $('.accordion-bidding').remove();
  $("#basics").next().after(html);

  $(".nstSlider").nstSlider({
    left_grip_selector:".leftGrip",
    value_changed_callback: function(cause, v) {
      $(this).parent().find(".leftLabel").val(v);
      updateSum($(this).data('id'));
    }
  });    
  for (i = 0; i < participants.length; i++) {
    $(".valuation_ipt"+i).blur(function() {
      var val = parseInt($(this).val());
      if (isNaN(val) || val<=0) val = 1;
      if (val>target) val=target;
      $(this).val(val);
      $(this).parent().parent().find(".nstSlider").nstSlider("set_position", val);
      updateSum($(this).data('id'));
    });
    resetSliders(i);
  }

  $('.accordion').unbind();
  $('.accordion').accordion({defaultOpen: 'basics'});
}

function containsDuplicates(array) {
  var valuesSoFar = {};
  for (var i = 0; i < array.length; ++i) {
      if (!(array[i] === "")) {
        var value = array[i];
        if (Object.prototype.hasOwnProperty.call(valuesSoFar, value)) {
            return true;
        }
        valuesSoFar[value] = true;
      }
  }
  return false;
}

function updateSum(i) {
  sum[i] = 0;
  var temp;
  $(".valuation_ipt"+i).each(function() {
    temp = parseInt($(this).val(),10);
    if (!isNaN(temp)) {
      sum[i] += temp;
    }
  });
  $('#sum-'+i).html(sum[i]);
  $("#bidding_"+i+" .white-check").remove();
  if (sum[i] == target) {
    $("#bidding_"+i).append("<span class='white-check'>&#10003;</span>");
  }
}

function resetSliders(i) {
  $(".nstSlider"+i).nstSlider("set_position",0);
  $(".valuation_ipt"+i).val(1);
  updateSum(i);
}

function updateSliders(i) {
  if (sum[i] == 0) return;
  var multiplier = 1.0 * target / sum[i];
  
  var scaled_sum = 0;
  $(".valuation_ipt"+i).each(function() {
    scaled_sum += Math.round(multiplier * parseInt($(this).val(),10));
  });

  var remainder = target - scaled_sum;
  $(".valuation_ipt"+i).each(function() {
    scaled_val = Math.round(multiplier * parseInt($(this).val(),10));
    if (remainder < 0 && scaled_val > 0) {
      remainder++;
      $(this).val(scaled_val - 1);
    } else if (remainder > 0 && scaled_val < target) {
      remainder--;
      $(this).val(scaled_val + 1);
    } else {
      $(this).val(scaled_val);
    }
    $(this).parent().parent().find(".nstSlider").nstSlider("set_position", parseInt($(this).val()));
  });  

  $("#bidding_"+i+" .white-check").remove();
  $("#bidding_"+i).append("<span class='white-check'>&#10003;</span>");
}

function checkSliders(i) {
  $("#bidding_"+i+" .white-check").remove();
  if (sum[i] == target) {
    advanceAccordion($('#bidding_'+i));
    $("#bidding-error-"+i).text("");
    $("#bidding_"+i).append("<span class='white-check'>&#10003;</span>");
    return true;
  } else {
    displayError("Please make sure your values sum to " + target + ".", "bidding-error-"+i);
    return false;
  }
}

function advanceAccordion(cur_tab) {
  next_tab = cur_tab.next().next();
  if (!next_tab.hasClass('accordion')) return;
  
  cur_tab.next().slideUp('slow', function() {
    next_tab.next().slideDown('slow', function() {
      scrollToView(next_tab);
    });
  });
  cur_tab.removeClass('accordion-open');
  cur_tab.addClass('accordion-close');

  
  next_tab.removeClass('accordion-close');
  next_tab.addClass('accordion-open');
  
}

function checkBids() {
  var success = true;
  var i;
  for (i = 0; i < participants.length; i++) {
    $("#bidding_"+i+" .white-check").remove();
    if (sum[i] != target) {
      success = false;
    } else {
      $("#bidding_"+i).append("<span class='white-check'>&#10003;</span>");
    }
  }
  if (success) {
    $('#update-results-msg').text("Your request is being processed. This may take a moment.");
    $('#results-table').html('');
    $('#submit-demo').hide();
    $.ajax({
      type: "POST",
      url: "../../../demo/create",
      data: { app: "credit", input: buildJSON() }
    }).fail(function() {
      $('#update-results-msg').text("We encountered an internal server error. Sorry for the inconvenience.");
      $('#submit-demo').show();
    });
  } else {
    displayError("Some participants haven't entered their evaluations, or have errors (checkmarks indicate those who have successfully entered their evaluations). Once everyone is done, press the submit button again.", "update-results-msg");
  }
}

function buildJSON() {
  var json = {}
  json['target'] = target;
  json['participants'] = participants;
  json['bids'] = {};
  for (var i = 0; i < participants.length; i++) {
    json['bids'][participants[i]] = {};
    for (var j = 0; j < participants.length; j++) {
      if (i==j) continue;
      value = parseInt($('#values_'+i+'_'+j).val(), 10);
      json['bids'][participants[i]][participants[j]] = value;      
    }
  }
  return json;
}

function pollResults() {
  $.getScript('../../../demo/poll?id='+id+'&p='+pwd);
}